// MIT License

// Copyright (c) 2019-2021 bloc97
// All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC Anime4K-v4.0-Restore-CNN-Light-Soft-(S)-Conv-4x3x3x3
//!HOOK MAIN
//!BIND MAIN
//!SAVE conv2d_tf
//!WIDTH MAIN.w
//!HEIGHT MAIN.h
//!COMPONENTS 4
#define go_0(x_off, y_off) (MAIN_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.010419768, -0.08816144, 0.08269426, -0.13005553, 0.001782306, -0.1799122, -0.030874386, -0.047349274, 0.07992693, -0.04271118, 0.10781453, -0.07021617, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, -1.0);
    result += mat4(-0.28184247, 0.09408456, -0.5066571, 0.16000038, -0.46653497, -0.098366305, -0.38567537, 0.07981989, -0.1967451, 0.06172857, -0.2902865, 0.046158973, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 0.0);
    result += mat4(0.13700338, -0.056280807, -0.022137387, -0.22010444, 0.020185513, -0.2619033, -0.118314125, -0.116040766, 0.086181864, 0.008221556, 0.009294777, -0.07228396, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 1.0);
    result += mat4(-0.25080994, 0.024221765, 0.29021007, -0.21943718, -0.27421692, -0.04108804, 0.6172214, 0.12636562, -0.18608683, -0.065102115, 0.07848952, -0.1338769, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, -1.0);
    result += mat4(-0.12914771, 0.09000165, 0.23588653, 0.23850746, -0.4112629, 1.3789965, -0.07771054, -0.057368394, 9.572555e-05, 0.04739356, 0.07623283, 0.15283498, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 0.0);
    result += mat4(0.3121726, -0.0050438396, -0.09645723, -0.20406353, 0.48124707, 0.057422265, -0.0142673915, -0.40803567, 0.17072074, -0.10477098, -0.029900638, -0.11646387, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 1.0);
    result += mat4(0.03982173, 0.0051539377, -0.04312174, -0.26396692, 0.12766701, -0.21889615, -0.010773046, -0.066304915, 0.0147872595, 0.10804558, -0.04006801, -0.091119826, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, -1.0);
    result += mat4(0.13709393, -0.0098326495, -0.016978921, 0.28782314, 0.3153975, -0.0664083, 0.12793046, 0.36604407, 0.012725294, -0.106194496, 0.016408151, 0.0820197, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 0.0);
    result += mat4(0.024353331, 0.0035917524, 0.07504038, -0.020336552, 0.21586616, -0.18937394, -0.119880244, -0.11160381, 0.007364748, 0.065326765, 0.076604314, 0.05984965, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 1.0);
    result += vec4(0.031310312, -0.028639821, 0.023635104, 0.3488302);
    return result;
}
//!DESC Anime4K-v4.0-Restore-CNN-Light-Soft-(S)-Conv-4x3x3x8
//!HOOK MAIN
//!BIND conv2d_tf
//!SAVE conv2d_1_tf
//!WIDTH conv2d_tf.w
//!HEIGHT conv2d_tf.h
//!COMPONENTS 4
#define go_0(x_off, y_off) (max((conv2d_tf_texOff(vec2(x_off, y_off))), 0.0))
#define go_1(x_off, y_off) (max(-(conv2d_tf_texOff(vec2(x_off, y_off))), 0.0))
vec4 hook() {
    vec4 result = mat4(-0.07814104, 0.13710387, -0.028505946, -0.07695027, 0.015962724, 0.06400925, -0.29332846, 0.26170507, -0.13070545, 0.0796618, -0.034432586, -0.15768623, -0.0040476597, -0.08521428, -0.11463449, -0.17259103) * go_0(-1.0, -1.0);
    result += mat4(0.16620706, 0.023924716, 0.28037265, 0.08898169, -0.07965584, -0.119393066, 0.16500773, 0.27963802, -0.035960183, -0.15794419, -0.049844626, 0.10244742, -0.11949314, -0.38995475, 0.14590421, 0.042496283) * go_0(-1.0, 0.0);
    result += mat4(0.010595542, 0.16247019, 0.028323714, -0.060615107, -0.037917655, 0.02559643, -0.15308096, -0.04818198, 0.20588556, 0.12319397, 0.038899355, 0.14118953, -0.01308206, 0.060620412, 0.09180864, -0.1925571) * go_0(-1.0, 1.0);
    result += mat4(-0.04377214, -0.05966916, 0.09308243, 0.27152735, 0.08823304, -0.04019776, -0.11554538, -0.18922643, -0.22697641, 0.16838373, -0.20608324, -0.12841465, 0.16590779, -0.030137353, -0.15641256, 0.32515442) * go_0(0.0, -1.0);
    result += mat4(0.12560657, -0.10826284, -0.4817547, 0.082163885, -0.2592545, -0.13180953, 0.21326661, 0.0063789147, -0.021460786, -0.081134625, 0.12854928, -0.021345213, 0.25856233, 0.35960114, -0.08558089, 0.042572763) * go_0(0.0, 0.0);
    result += mat4(0.15508737, 0.23872094, -0.05705797, 0.057071544, 0.08186531, 0.20594785, 0.055613954, 0.2547523, -0.016229767, -0.054116476, 0.34157652, -0.060514037, -0.066814095, 0.30622342, 0.009360573, -0.12697726) * go_0(0.0, 1.0);
    result += mat4(-0.14784849, 0.0038137974, -0.09612283, 0.024801891, -0.14862221, -0.04051765, -0.08255564, -0.19419043, -0.12403305, 0.1510652, 0.02463324, 0.02120293, -0.18667068, 0.11539082, 0.08245113, -0.043867692) * go_0(1.0, -1.0);
    result += mat4(0.26182058, 0.13684203, -0.33166656, 0.0114234155, 0.06871738, 0.08071203, 0.027135309, -0.25442347, 0.38678274, 0.5952725, -0.30767635, -0.47954085, -0.015307678, -0.047054898, -0.06745671, -0.019696325) * go_0(1.0, 0.0);
    result += mat4(-0.006627976, -0.051826607, 0.051350746, 0.049556855, 0.0715046, -0.13306485, -0.08431934, 0.028816402, 0.1531929, 0.058953345, -0.112151146, -0.13940829, 0.0017338529, -0.016887227, 0.052224256, 0.096552946) * go_0(1.0, 1.0);
    result += mat4(0.008999965, 0.012037613, 0.086675465, 0.23440228, 0.08174242, -0.31873026, 0.15497388, 0.058406625, -0.18415177, 0.106763355, 0.20124212, -0.0762751, -0.15442266, 0.24508327, 0.35267952, -0.12798606) * go_1(-1.0, -1.0);
    result += mat4(0.043897197, 0.055721447, -0.43253675, 0.16784641, 0.050418645, -0.3310402, -0.059007574, -0.02698703, 0.2526707, 0.26912737, -0.03433765, -0.10053469, 0.2763838, 0.4543116, -0.36286235, 0.012197961) * go_1(-1.0, 0.0);
    result += mat4(0.01627575, -0.11621515, 0.0041209217, 0.19496429, -0.20539878, -0.18362744, 0.52147126, 0.02617313, -0.20292751, 0.015440355, 0.17758858, -0.056584053, 0.033832826, -0.08167791, -0.052125312, 0.21012513) * go_1(-1.0, 1.0);
    result += mat4(0.29077974, 0.15445134, -0.14127941, -0.3152572, 0.31479082, -0.68069977, 0.25675455, 0.39181003, 0.06076621, -0.019088833, 0.23120089, 0.08489264, -0.11991065, -0.14587316, -0.103666894, -0.08836858) * go_1(0.0, -1.0);
    result += mat4(0.18783961, 0.21114215, 0.022409009, -0.025443872, 0.5484852, -0.07926685, -0.029487725, 0.35974196, 0.06595919, 0.44378537, -0.53594935, -0.124183856, -0.27564234, -0.37293983, 0.035707273, -0.1668902) * go_1(0.0, 0.0);
    result += mat4(0.008896794, -0.20765445, 0.06858981, -0.02396694, -0.13282946, -0.50546694, -0.108567506, -0.15806033, 0.29720005, 0.48068893, 0.06753253, -0.15753283, -0.021768555, -0.30726486, 0.17751443, 0.0072953175) * go_1(0.0, 1.0);
    result += mat4(0.23930173, 0.026712833, -0.06801307, 0.1436012, -0.12845036, -0.18595302, 0.5275308, 0.5582786, 0.21466811, -0.03330324, 0.043216065, -0.18304062, -0.002905402, 0.044157166, -0.1493023, 0.058262553) * go_1(1.0, -1.0);
    result += mat4(0.066578984, -0.1385878, 0.2791804, 0.026246555, -0.31953672, -0.18517424, -0.015464074, 0.5460508, -0.56653726, -0.3273134, 0.30953434, -0.06730924, 0.27185494, 0.118062966, -0.1122644, -0.0029312132) * go_1(1.0, 0.0);
    result += mat4(0.005270589, -0.065388285, -0.12169101, 0.012407855, -0.20461376, 0.12382672, 0.013254381, -0.06357658, 0.10411988, 0.25472263, 0.11312222, -0.42933273, -0.0018083721, -0.08738068, -0.092316836, -0.11236404) * go_1(1.0, 1.0);
    result += vec4(-0.11007039, 0.001734571, -0.030158311, 0.05573615);
    return result;
}
//!DESC Anime4K-v4.0-Restore-CNN-Light-Soft-(S)-Conv-4x3x3x8
//!HOOK MAIN
//!BIND conv2d_1_tf
//!SAVE conv2d_2_tf
//!WIDTH conv2d_1_tf.w
//!HEIGHT conv2d_1_tf.h
//!COMPONENTS 4
#define go_0(x_off, y_off) (max((conv2d_1_tf_texOff(vec2(x_off, y_off))), 0.0))
#define go_1(x_off, y_off) (max(-(conv2d_1_tf_texOff(vec2(x_off, y_off))), 0.0))
vec4 hook() {
    vec4 result = mat4(-0.10225791, -0.23405427, -0.22695702, 0.026816094, 0.06896883, 0.07002734, 0.33466354, -0.20995879, 0.085131586, -0.372902, -0.27397436, 0.042524878, -0.0021746238, -0.10402323, 0.13593435, -0.18423176) * go_0(-1.0, -1.0);
    result += mat4(0.14085035, 0.012146488, -0.065692894, -0.12452402, -0.18725064, -0.374361, 0.03067443, -0.0047634225, 0.24230403, -0.28255472, 0.15724804, -0.22078505, -0.0036204127, -0.22166105, 0.025843317, 0.04785427) * go_0(-1.0, 0.0);
    result += mat4(-0.05443472, 0.32764667, 0.22859994, -0.15515661, 0.103393205, -0.12585963, -0.051716477, -0.017212993, 0.023495922, -0.09220861, 0.033683084, -0.06392604, -0.040911246, -0.11259047, -0.08486976, 0.0052359304) * go_0(-1.0, 1.0);
    result += mat4(-0.003526412, -0.4321921, -0.2972982, 0.23668608, -0.08729356, 0.027733112, 0.17269307, -0.065523505, 0.11328899, -0.10500691, 0.21722378, 0.1629444, -0.02557549, 0.04986191, 0.21002054, -0.14140046) * go_0(0.0, -1.0);
    result += mat4(-0.032820143, 0.01890328, -0.16365868, -0.1284095, -0.12995237, -0.04934183, -0.32450473, 0.02903692, -0.6767523, -0.446583, -0.22678111, 0.30777735, -0.1282975, -0.2689888, -0.1941266, 0.31638604) * go_0(0.0, 0.0);
    result += mat4(-0.287967, 0.20258869, -0.24556664, -0.046290964, 0.04356333, -0.44901174, -0.057067744, 0.056674015, 0.074780546, -0.4286295, -0.51825434, -0.09576811, 0.17442872, -0.17567833, -0.17732114, -0.102144316) * go_0(0.0, 1.0);
    result += mat4(0.23313749, 0.15606697, 0.06975617, 0.35524982, 0.18557407, 0.2751899, -0.082530096, 0.42318496, 0.21188006, 0.21567121, -0.017212473, 0.27604195, 0.08416413, 0.18498889, -0.12043486, 0.25050873) * go_0(1.0, -1.0);
    result += mat4(0.06121331, 0.14014375, -0.051093943, 0.17348237, 0.069138415, 0.283217, -0.10371894, 0.07353684, 0.30854186, 0.09059801, -0.100644834, 0.2802281, 0.0986485, 0.10492322, -0.067593865, 0.047716144) * go_0(1.0, 0.0);
    result += mat4(0.081720255, 0.0012660996, 0.026027896, 0.06835545, -0.075739436, 0.1766185, -0.054029312, -0.11201639, 0.1463741, 0.22337161, 0.048587687, 0.008748262, 0.078451514, 0.10174189, 0.061274655, 0.031521577) * go_0(1.0, 1.0);
    result += mat4(-0.09525635, 0.12620348, -0.046475027, 0.09905847, -0.16506132, 0.020016987, -0.23255266, 0.17625473, 0.021179618, 0.10170842, 0.045019854, 0.110944055, -0.17369494, 0.08305699, 0.084656075, 0.0682391) * go_1(-1.0, -1.0);
    result += mat4(-0.24879016, 0.15468381, -0.08105749, 0.21843643, -0.07421811, 0.2124377, 0.00234217, 0.098856315, 0.027639464, -0.07058003, -0.24862467, 0.12454229, 0.0759879, -0.017571496, -0.011863385, -0.104745924) * go_1(-1.0, 0.0);
    result += mat4(-0.010487801, -0.23130558, -0.24759649, 0.19365744, -0.18718925, 0.20015222, 0.23148382, -0.027783291, 0.25611305, -0.17116044, -0.16435401, 0.028814763, -0.16574198, 0.2853887, 0.06634458, -0.014015237) * go_1(-1.0, 1.0);
    result += mat4(-0.15378691, 0.03433151, -0.15999503, 0.011373159, -0.14145753, 0.10039748, 0.017974868, 0.16584013, 0.097981915, -0.07706249, -0.27280077, -0.015014161, -0.14366764, 0.006258611, -0.14591524, 0.3460853) * go_1(0.0, -1.0);
    result += mat4(0.056374744, 0.024370378, 0.27625754, 0.23209806, 0.014420503, -0.6945205, 0.2530807, 0.32136554, 0.4523813, 0.41380435, 0.090157315, -0.14245409, 0.23790927, -0.13411228, 0.18021153, -0.39002612) * go_1(0.0, 0.0);
    result += mat4(0.04057322, 0.14293924, 0.40865213, 0.21656355, -0.3197255, 0.1378561, 0.01912608, -0.0791107, 0.16313636, 0.22397718, 0.22965997, 0.015410431, -0.28999564, -0.09895887, -0.03046332, -0.06466944) * go_1(0.0, 1.0);
    result += mat4(-0.17311163, -0.13981467, 0.11667287, -0.113521546, -0.3146736, -0.090984546, 0.105286956, -0.32674983, -0.085722044, -0.19514981, -0.010367435, -0.12692425, -0.19299512, -0.08943996, 0.13128008, -0.032425277) * go_1(1.0, -1.0);
    result += mat4(-0.33473045, -0.14707583, 0.17974082, -0.2546769, -0.25268286, 0.11903611, 0.069133595, 0.10887174, -0.16365698, -0.1247158, 0.11557319, -0.12083403, -0.03728403, 0.096275724, 0.018670795, 0.5697281) * go_1(1.0, 0.0);
    result += mat4(-0.15115362, -0.08129143, -0.009318659, -0.034456875, -0.1346615, -0.17842768, -0.025897343, 0.14795262, -0.12703797, -0.02479091, 0.021590455, 0.0022247653, -0.21722889, 0.15899277, -0.2116551, -0.058297183) * go_1(1.0, 1.0);
    result += vec4(-0.010443598, -0.041873485, -0.07939831, -0.053712692);
    return result;
}
//!DESC Anime4K-v4.0-Restore-CNN-Light-Soft-(S)-Conv-3x3x3x8
//!HOOK MAIN
//!BIND MAIN
//!BIND conv2d_2_tf
//!SAVE MAIN
//!WIDTH conv2d_2_tf.w
//!HEIGHT conv2d_2_tf.h
#define go_0(x_off, y_off) (max((conv2d_2_tf_texOff(vec2(x_off, y_off))), 0.0))
#define go_1(x_off, y_off) (max(-(conv2d_2_tf_texOff(vec2(x_off, y_off))), 0.0))
vec4 hook() {
    vec4 result = mat4(0.08175564, 0.092549704, 0.05963459, 0.0, -0.031180669, -0.039862648, -0.031569477, 0.0, 0.011049762, 0.008835015, 0.007323282, 0.0, -0.018786736, -0.01964499, -0.020531593, 0.0) * go_0(-1.0, -1.0);
    result += mat4(0.07565475, 0.0753584, 0.071092464, 0.0, -0.052333433, -0.06977538, -0.06969808, 0.0, 0.048612066, 0.054266628, 0.04320718, 0.0, 0.09843739, 0.107559696, 0.101909585, 0.0) * go_0(-1.0, 0.0);
    result += mat4(0.065932065, 0.074544355, 0.07242846, 0.0, -0.0054657767, -0.016522843, -0.0075786854, 0.0, 0.03361691, 0.02907521, 0.0230439, 0.0, 0.07456821, 0.08498914, 0.07892217, 0.0) * go_0(-1.0, 1.0);
    result += mat4(3.698009e-05, 0.009349703, 0.008665931, 0.0, -0.038600054, -0.040487353, -0.046019793, 0.0, -0.0028588725, -0.003959378, 0.0008496539, 0.0, 0.009347466, 0.005453444, 0.00821891, 0.0) * go_0(0.0, -1.0);
    result += mat4(-0.23439302, -0.27071154, -0.24213347, 0.0, 0.3610999, 0.3843526, 0.35737872, 0.0, -0.17123708, -0.18593995, -0.17001525, 0.0, -0.03184843, -0.026196873, -0.035659607, 0.0) * go_0(0.0, 0.0);
    result += mat4(-0.046000414, -0.04385306, -0.044083446, 0.0, -0.14715743, -0.16756758, -0.15926854, 0.0, 0.085596584, 0.08621385, 0.09147242, 0.0, -0.14157963, -0.1559907, -0.144712, 0.0) * go_0(0.0, 1.0);
    result += mat4(0.07245836, 0.06974512, 0.072891675, 0.0, -0.0052374243, 0.00043867316, -0.009686242, 0.0, 0.010683176, 0.012230212, 0.013119214, 0.0, -0.014198724, -0.01678666, -0.014557718, 0.0) * go_0(1.0, -1.0);
    result += mat4(-0.06641079, -0.0784124, -0.0588064, 0.0, 0.0013729398, 0.013307043, 0.005991112, 0.0, -0.08021528, -0.07421197, -0.08507438, 0.0, 0.033843763, 0.034762383, 0.033753794, 0.0) * go_0(1.0, 0.0);
    result += mat4(0.06649466, 0.075616285, 0.06746018, 0.0, -0.028596392, -0.029393747, -0.027191274, 0.0, 0.34812355, 0.34918338, 0.29508904, 0.0, -0.01540667, -0.024981588, -0.019110648, 0.0) * go_0(1.0, 1.0);
    result += mat4(0.037393756, 0.03295904, 0.047911897, 0.0, 0.016011974, 0.020774273, 0.014971732, 0.0, -0.027268022, -0.031283993, -0.024299156, 0.0, -0.008820312, -0.0051259464, -0.011858577, 0.0) * go_1(-1.0, -1.0);
    result += mat4(-0.03655111, -0.037679356, -0.034835048, 0.0, 0.003390988, 2.9495115e-05, 0.003562704, 0.0, -0.02958365, -0.02977828, -0.02280633, 0.0, -0.10442245, -0.10408619, -0.10935635, 0.0) * go_1(-1.0, 0.0);
    result += mat4(-0.043148685, -0.049972463, -0.04708322, 0.0, 0.0062836045, 0.003616602, 0.002645487, 0.0, -0.038386077, -0.03769902, -0.03900102, 0.0, -0.06290695, -0.061560433, -0.0664556, 0.0) * go_1(-1.0, 1.0);
    result += mat4(0.016747897, 0.011383335, 0.009885158, 0.0, 0.03261364, 0.036946233, 0.037626904, 0.0, -0.010468889, -0.017246954, -0.011014456, 0.0, -0.08709689, -0.10137997, -0.09682292, 0.0) * go_1(0.0, -1.0);
    result += mat4(-0.05872846, -0.049948122, -0.06605959, 0.0, -0.1826277, -0.19926065, -0.18960804, 0.0, 0.13714166, 0.14803448, 0.14050373, 0.0, 0.32939678, 0.32138297, 0.31587392, 0.0) * go_1(0.0, 0.0);
    result += mat4(0.045431927, 0.043507263, 0.043363284, 0.0, 0.11489776, 0.12831782, 0.11768379, 0.0, -0.12696995, -0.13979433, -0.13963582, 0.0, 0.109613515, 0.11838322, 0.10615715, 0.0) * go_1(0.0, 1.0);
    result += mat4(-0.03862038, -0.04005642, -0.03868668, 0.0, 0.0053418214, 0.0034557416, 0.009558502, 0.0, -0.017737107, -0.017258734, -0.021278048, 0.0, -0.03710559, -0.049582805, -0.030371217, 0.0) * go_1(1.0, -1.0);
    result += mat4(0.059778247, 0.07075932, 0.059305716, 0.0, -0.040881973, -0.042240143, -0.033975493, 0.0, 0.015022679, 0.021123543, 0.018564163, 0.0, -0.10338906, -0.123969406, -0.11351444, 0.0) * go_1(1.0, 0.0);
    result += mat4(0.040787555, 0.041784264, 0.046954, 0.0, 0.026668718, 0.032581758, 0.030426843, 0.0, 0.109260485, 0.11538758, 0.10983856, 0.0, -0.0072186375, -0.0054839314, -0.008830486, 0.0) * go_1(1.0, 1.0);
    result += vec4(-0.0007275202, -0.0007950152, -0.001253815, 0.0);
    return result + MAIN_tex(MAIN_pos);
}
